.guide{
    width: 100vw;
    height: 100vh;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
}

.main{
    flex: 1;
    display: grid;
    grid-template-rows: 1fr 75px;
    grid-template-areas: 
    "instructions"
    "guideMenu";
}

.exitBtn {
    position: fixed;
    left: 1rem;
    top: 1rem;
    /* border: 2px solid black; */
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    padding: 1rem 2rem;
    font-size: 1.3rem;
    border-radius: 0.4rem;
}
.exitBtn:hover {
    background-color: rgb(233, 233, 233);
}

.top {
    width: 300px;
    margin: 1rem;
    position: absolute;
    right: 0;
}

.topContainer {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.commandFeedback{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: rgba(27, 27, 27, 0.6);
    border-radius: 1rem;
    border: 1.5px solid white;
    font-size: 1.5rem;
    color: white;
    font-weight: bold;
    text-align: center;
    line-height: 90px;
    width: 300px;
    height: 90px;
}

.voiceControl{
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    margin: 0 auto;
    width: 260px;
    height: 60px;
    border-bottom-right-radius: 0.4rem;
    border-bottom-left-radius: 0.4rem;
    background-color: black;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    padding: 0.2rem 1rem 1rem 1rem;
    text-align: center;
}

.voiceControl>h2{
    color: white;
    font-size: 1.2rem;
    display: inline;
}

.toggleVoice{
    padding: 0.2rem;
    border-radius: 0.1rem;
    background-color: white;
}

.voiceControl .feedback{
    color: white;
}

.guideMenu{
    display: flex;
    flex-direction: row;
}

.progressbarWrapper{
    flex: 8;
    /* display: flex;
    align-items: center;
    justify-content: center;
    text-align: center; */
}

.scrollButton{
    flex: 1;
    font-size: 1.5rem;
    min-width: 100px;
    background-color: rgb(2, 54, 0);
    color: #F0EEEB;
}

.scrollButton:hover{
    opacity: 0.8;
}

button:focus{
    outline: 0 !important;
}


.progressbarOutline{
    width: 100%;
    height: 70%;
    position: relative;
    top: 100%;
    transform: translateY(-100%);
    border-top: 1px solid black;
}

.progressbarFiller{
    height: 100%;
    width: 20%;
    background: 
    /* On "top" */
    repeating-linear-gradient(
      45deg,
      transparent,
      transparent 20px,
      rgba(0, 0, 0, 0.596) 20px,
      rgba(0, 0, 0, 0.596) 24px
    );  
    transition-duration: 200ms;
}

.progressText{
    position: absolute;
    background-color: rgba(255, 255, 255, 0.534);
    left: 50%;
    top: 50%;
    transform: translate(-50%,-50%);
    font-size: 2rem;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
}

.instructions{
    /* height: 100%; */
    display: flex;
    flex-direction: column;
}

.instructionImageWrapper{
    /* height: 50%; */
    width: 70%;
    min-width: 400px;
    flex: 4;
    /* background-color: black; */
    /* display: flex;
    align-items: center; */
    /* padding-top: 15%; */
    background-size: contain;
    background-position: bottom;
    background-repeat: no-repeat;
    margin: 5rem auto 1rem auto;
    min-width: ;
}

.instructionTextWrapper{
    text-align: center;
    flex: 1;
    font-size: 3rem;
    max-width: 70%;
    margin: 0 auto;

}

.mentalNote{
    width: 100%;
    background-color: white;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    border-radius: 0.3rem;
    padding: 1rem;
    margin-left: auto;
    margin-bottom: 1rem;
}

.notePrefix{
    color:  #E8411B;
    font-size: 1.3rem;
}

.noteText{
    font-size: 1.3rem;
}

.outerTimer {
    width: 100%;
    background-color: white;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    border-radius: 0.3rem;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    margin-left: auto;
    margin-bottom: 1rem;
}

.recipeTimer{
    display: flex;
    flex-direction: row;
}

.timerText{
    font-size: 1.5rem;
    color: rgb(37, 37, 37);
    margin: 0.2rem;
    flex: 1;
}

.timerValue{
    height: 70px;
    font-size: 1.5rem;
    letter-spacing: 0.3rem;
    padding: 1rem;
    border-radius: 1rem;
    background-color: black;
    /* position: relative;
    left: 50%;
    transform: translate(-50%, 0); */
    color: white;
    width: auto;
    display: inline-block;
    margin: 0.3rem;
    align-self: flex-end;
}

.pauseBtn {
    font-size: 1rem;
    font-style: italic;
    text-align: left;
    margin-top: -0.5rem;
    padding-bottom: -1rem;
}



.timerValPrefix{
    color:  #E8411B;
    font-size: 1.3rem;
}

.userFeedback{
    background-color: white;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    border-radius: 0.3rem;
    padding: 1rem;
    width: 100%;    
    margin-left: auto;
    margin-bottom: 1rem;
}

.feedbackText{
    font-size: 1.3rem;
    color: black;
}

.userFeedbackBtn{
    height: 3rem;
    padding: 0.2rem;
    min-width: 180px;
    border-radius: 0.4rem;
    margin-top: 1rem;
    width: 100%;
    background-color: rgb(2, 54, 0);
    font-size: 1.5rem;
    color: white;
}

.userFeedbackBtn:hover{
    opacity: 0.8;
}

button.disabled {
    color: rgb(187, 187, 187);
}

button.disabled:hover {
    opacity: 1;
    cursor: default;
}

.animate {
    animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    perspective: 1000px;
}

.pulse {
    animation-iteration-count: infinite;
    animation-name: pulse;
    animation-duration: 0.25s;
}

@keyframes pulse {
    0%,100% {
        background-color: white;
    }
    50% {
        background-color: orange;
    }
}

@keyframes shake {
    10%, 90% {
      transform: translate3d(-1px, 0, 0);
    }
    
    20%, 80% {
      transform: translate3d(2px, 0, 0);
    }
  
    30%, 50%, 70% {
      transform: translate3d(-4px, 0, 0);
    }
  
    40%, 60% {
      transform: translate3d(4px, 0, 0);
    }
}